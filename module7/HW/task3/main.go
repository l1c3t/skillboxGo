/*
## 3. Вывод елочки

Что нужно сделать

Усложним задачу рисования, и попробуем вывести елочку.
В первой строке необходимо вывести одну звездочку, во второй - на две больше, в третьей - еще на две больше и так до количества строк указанных пользователем.
Например, если пользователь введет 5 то вывод должен иметь вид:

Советы и рекомендации
Необходимо выводить пробелы и затем, звездочки. Посмотрите, как количество пробелов и звездочек, в каждой строке, связано с введенным количеством строк и номером текущей строки.
Внутри цикла по строкам, скорее всего, понадобиться два цикла, один для вывода пробелов, второй для вывода звездочек.

Что оценивается
Правильность вывода елочки, что она симметрична и количество строк соответствует введенному пользователем.
*/

package main

import (
	"fmt"
)

func main() {
	var treeSize int
	fmt.Print("Введите размер елочки:")
	fmt.Scan(&treeSize)

	colCount := treeSize

	//проверяем на четность строк - если четное - смещаем на 1
	if treeSize%2 == 0 {
		colCount = treeSize + 1
	}

	treeColor := "*"
	blankColor := "_"

	//treeMiddle := treeSize%2 + 1
	offsetTree := 2 * colCount

	treeMiddle := int(offsetTree / 2)
	//проверяем на четность середины - если четное - смещаем на 1
	if treeMiddle%2 == 0 {
		treeMiddle = treeMiddle - 1
	}

	fmt.Println("середина", treeMiddle)
	fmt.Println("матрица", offsetTree)

	for i := 1; i <= treeSize; i++ {
		for j := 1; j <= (offsetTree - 1); j++ {
			if j <= treeMiddle-(i) || j >= treeMiddle+(i) {
				fmt.Print(blankColor)
			} else {
				fmt.Print(treeColor)
			}
			/* else if j >= treeMiddle+(i) {
				fmt.Print(blankColor)
			} */
		}
		fmt.Print("\n")
	}

}
